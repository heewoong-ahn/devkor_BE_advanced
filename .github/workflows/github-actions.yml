name: github-actions
run-name: ${{ github.actor }} is deploying new version of devkor_be_advanced
on:
  pull_request:
    types: [closed]
    branches:
      - main

env:
  DOCKER_IMAGE: ghcr.io/heewoong-ahn/devkor_be_advanced
  DOCKER_CONTAINER: devkor_be_advanced

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout source code from branch main
  #       uses: actions/checkout@v4

  #     - name: setup node 18
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'
  #         cache: npm
  #     - name: setup .env
  #       run: |
  #         echo "DB_HOST=${{secrets.DB_HOST}}" >> .env
  #         echo "DB_PORT=${{secrets.DB_PORT}}" >> .env
  #         echo "DB_USERNAME=${{secrets.DB_USERNAME}}" >> .env
  #         echo "DB_PASSWORD=${{secrets.DB_PASSWORD}}" >> .env
  #         echo "DB_DATABASE=${{secrets.DB_DATABASE}}" >> .env
  #         echo "SECRET_KEY_ACCESS=${{secrets.SECRET_KEY_ACCESS}}" >> .env
  #         echo "SECRET_KEY_REFRESH=${{secrets.SECRET_KEY_REFRESH}}" >> .env
  #         cat .env

  #     - name: install dependencies
  #       run: npm install
  #     - name: run test
  #       run: npm run test

  build:
    # needs: test
    runs-on: ubuntu-latest
    steps:
      - name: checkout source code from branch main
        uses: actions/checkout@v4

      - name: Setup Docker
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: docker login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.DEVKOR_TOKEN}}

      - name: build and push image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{env.DOCKER_IMAGE}}:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: setup .env
        run: |
          echo "DB_HOST=${{secrets.DB_HOST}}" > .env
          echo "DB_PORT=${{secrets.DB_PORT}}" >> .env
          echo "DB_USERNAME=${{secrets.DB_USERNAME}}" >> .env
          echo "DB_PASSWORD=${{secrets.DB_PASSWORD}}" >> .env
          echo "DB_DATABASE=${{secrets.DB_DATABASE}}" >> .env
          echo "SECRET_KEY_ACCESS=${{secrets.SECRET_KEY_ACCESS}}" >> .env
          echo "SECRET_KEY_REFRESH=${{secrets.SECRET_KEY_REFRESH}}" >> .env
          echo "EMAIL_ADDRESS=${{secrets.EMAILADDRESS}}" >> .env
          echo "EMAIL_PASSWORD=${{secrets.EMAILPASSWORD}}" >> .env
          echo "NODE_ENV=${{secrets.NODE_ENV}}" >> .env
          cat .env

      - name: run docker
        run: |
          cat .env
          docker stop ${{env.DOCKER_CONTAINER}} && docker rm ${{env.DOCKER_CONTAINER}} && docker rmi ${{env.DOCKER_IMAGE}}:latest
          docker run --env-file ./.env  -d -p 3000:3000 --name ${{env.DOCKER_CONTAINER}} --network host --restart always -v /home/ec2-user/logs:/app/logs ${{env.DOCKER_IMAGE}}:latest
